// Generated by CoffeeScript 1.3.1
(function() {
  var solve;

  solve = Solver(Dictionary);

  $(function() {
    $("#solve").submit(function() {
      var maxHits, tiles;
      maxHits = Number($("#maxhits").val()) || 10;
      tiles = $("#letters").val();
      tiles = tiles.toLowerCase().replace(/[^a-z]/g, "");
      if (tiles.length === 0) {
        return;
      }
      $("#letters").attr("disabled", true);
      $("#results").empty();
      if (!$('#solve').hasClass('resume')) {
        $(".resume").empty();
      }
      setTimeout((function() {
        var count;
        count = 0;
        solve(tiles, Number($("#maxlen").val()) || 30, function(hit) {
          count++;
          $("#results").append($("<tr />").append($("<th />").text(hit)).append($("<td />").append($("<input />").attr({
            value: hit.length,
            type: 'button'
          }).click(function() {
            var ch, _i, _len, _ref;
            $('#results').before($('<center />').attr({
              "class": 'resume'
            }).text(hit));
            _ref = hit.split('');
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              ch = _ref[_i];
              tiles = tiles.replace(new RegExp(ch), '');
            }
            $("#letters").val(tiles);
            if (tiles.length) {
              $("#solve").addClass('resume').submit();
              return $('#solve').removeClass('resume');
            } else {
              return $('#results').empty();
            }
          }))));
          return count < maxHits;
        });
        return $("#letters").attr("disabled", false).removeAttr('disabled');
      }), 1);
      return false;
    });
    $("#letters").focus();
    if (/\w+/.test(location.hash)) {
      $("#letters").val(location.hash.toLowerCase().replace(/[^a-z]/g, ""));
      return $("#solve").submit();
    }
  });

}).call(this);
